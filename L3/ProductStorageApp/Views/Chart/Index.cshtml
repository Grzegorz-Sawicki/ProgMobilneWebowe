@model ProductStorageApp.Models.ProductOrderModel

<div class="row">
    <div class="col-lg-5">
        <div class="card card-chart">
            <div class="card-header">
                <h5 class="card-category">Orders</h5>
                <h4 class="card-title">Orders by year</h4>
            </div>
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="ordersPerYearChart"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-5">
        <div class="card card-chart">
            <div class="card-header">
                <h5 class="card-category">Orders</h5>
                <h4 class="card-title">Orders by month</h4>
            </div>
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="ordersPerCurrentMonthChart"></canvas>
                </div>
            </div>
        </div>
    </div>

</div>

<div class="row">
    <div class="col-lg-10">
        <div class="card card-chart">
            <div class="card-header">
                <h5 class="card-category">Products</h5>
                <h4 class="card-title">Quantity by category</h4>
            </div>
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="quantityByCategoryChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-10">
        <div class="card card-chart">
            <div class="card-header">
                <h5 class="card-category">Products</h5>
                <h4 class="card-title">Average price by category</h4>
            </div>
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="avgPriceByCategoryChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>



<script src="..\assets\js\plugins\chartjs.min.js"></script>

<script>
    //charts:
    //1. orders by year, inc and out
    //2. products in each category
    //3. avg price in category

    // Retrieve years, incoming counts, and outgoing counts from ViewBag
    const years = @Html.Raw(Json.Serialize(ViewBag.Years));
    const incomingCounts = @Html.Raw(Json.Serialize(ViewBag.IncomingCounts));
    const outgoingCounts = @Html.Raw(Json.Serialize(ViewBag.OutgoingCounts));

    // Initialize the Chart.js bar chart with two datasets
    const ctx = document.getElementById('ordersPerYearChart').getContext('2d');
    const ordersPerYearChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: years,
            datasets: [
                {
                    label: 'Incoming Orders',
                    data: incomingCounts,
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                },
                {
                    label: 'Outgoing Orders',
                    data: outgoingCounts,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }
            ]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                    }                
                }],
            },
            maintainAspectRatio: false
        }
    });

    // Retrieve months, incoming counts, and outgoing counts from ViewBag
    const months = @Html.Raw(Json.Serialize(ViewBag.Months));
    const incomingMonthCounts = @Html.Raw(Json.Serialize(ViewBag.IncomingMonthCounts));
    const outgoingMonthCounts = @Html.Raw(Json.Serialize(ViewBag.OutgoingMonthCounts));

    // Initialize the Chart.js bar chart with two datasets for each month
    const ctx4 = document.getElementById('ordersPerCurrentMonthChart').getContext('2d');
    const monthlyOrdersChart = new Chart(ctx4, {
        type: 'bar',
        data: {
            labels: months,
            datasets: [
                {
                    label: 'Incoming Orders',
                    data: incomingMonthCounts,
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                },
                {
                    label: 'Outgoing Orders',
                    data: outgoingMonthCounts,
                    backgroundColor: 'rgba(255, 99, 132, 0.5)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }
            ]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                    }
                }]
            },
            maintainAspectRatio: false
        }
    });

    // Retrieve categories and quantities from ViewBag
    const categories = @Html.Raw(Json.Serialize(ViewBag.Categories));
    const categoryNames = @Html.Raw(Json.Serialize(ViewBag.CategoryNames));
    const quantities = @Html.Raw(Json.Serialize(ViewBag.Quantities));

    // Initialize the Chart.js bar chart
    const ctx2 = document.getElementById('quantityByCategoryChart').getContext('2d');
    const quantityByCategoryChart = new Chart(ctx2, {
        type: 'bar',
        data: {
            labels: categoryNames,
            datasets: [{
                label: 'Total Quantity',
                data: quantities,
                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                borderColor: 'rgba(153, 102, 255, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                    }
                }]
            },
            maintainAspectRatio: false
        }
    });

    // Retrieve categories and quantities from ViewBag
    const avgPrices = @Html.Raw(Json.Serialize(ViewBag.AvgPrices));

    // Initialize the Chart.js bar chart
    const ctx3 = document.getElementById('avgPriceByCategoryChart').getContext('2d');
    const avgPricesByCategoryChart = new Chart(ctx3, {
        type: 'bar',
        data: {
            labels: categoryNames,
            datasets: [{
                label: 'Average Price',
                data: avgPrices,
                backgroundColor: 'rgba(153, 102, 255, 0.2)',
                borderColor: 'rgba(153, 102, 255, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                    }
                }]
            },
            maintainAspectRatio: false
        }
    });
</script>
